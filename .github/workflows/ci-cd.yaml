name: CI/CD - Payment Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set permissions for Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set permissions for Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Run Unit Tests
        run: ./gradlew test jacocoTestReport

      - name: Upload JaCoCo Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: build/reports/jacoco/test/html/

      - name: Check Quality Gate
        run: ./gradlew check
        continue-on-error: true

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t gabiponcet/lanchonete-payment:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Scan Docker image for vulnerabilities
        run: docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --severity HIGH,CRITICAL gabiponcet/lanchonete-payment:latest

      - name: Push Docker image
        run: docker push gabiponcet/lanchonete-payment:latest

      - name: Set up LocalStack
        run: docker-compose -f ./localstack-compose.yml up -d

      - name: Deploy to LocalStack
        run: |
          aws --endpoint-url=http://localhost:4566 cloudformation deploy ...
          aws --endpoint-url=http://localhost:4566 s3 mb s3://my-bucket

      - name: Shut down LocalStack
        if: always()
        run: docker-compose -f ./localstack-compose.yml down